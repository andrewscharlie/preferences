* Clean up save line item forecast in XFP API

Right now, we're not specifying the root entities correctly. This is causing us to have to iterate through all shards when retrieving line item forecasts, which is incredibly inefficient. On top of this, we have multiple representations of a line item forecast, which should all just use the domain object instead.

** DONE Find out why the PEBL and Agave versions of the forecast don't match in AutomatedForecastManagerImplTest
   CLOSED: [2014-09-24 Wed 15:43] SCHEDULED: <2014-09-24 Wed>

*** For some reason isOverbooked isn't matching between the Agave and PEBL tests. The test "testUpdateForecastsForNetwork_automatedIsStale()" is a good example of this happening.

*** When we save the LineItemForecast, isOverbooked is null as expected. When we query the LineItemForecastPeblDao, it's still null. However, when we mark it as null, by the time that we're making a copy of it in the LineItemForecastProtoAdapter copy constructor, isOverbooked is now false instead of null. This is unexpected.

*** After thinking on it for a bit, it doesn't seem within the scope of this CL to fix this problem. It seems that when I do what the old test was doing - just setting isOverbooked to false - things start working, and I don't want to chase down this rabbit hole for any longer.

** DONE Fix AutomatedForecastStoreServiceImplTest
   CLOSED: [2014-09-24 Wed 15:43] SCHEDULED: <2014-09-24 Wed>

** Kill AutomatedLineItemForecast
   SCHEDULED: <2014-09-24 Wed>

** Send out CL for review to mabdelnoor@
   SCHEDULED: <2014-09-24 Wed>


* Scale underdelivery warnings

** DONE Figure out which network has the most line items currently running with at least one standard
   CLOSED: [2014-10-09 Thu 11:21]

select t1.NetworkId, COUNT(0) as line_item_count, t2.standard_count
from LineItem as t1
hash join (
  select t2.NetworkId, COUNT(0) as standard_count 
  from LineItem as t2 
  where t2.Info.reservation_type = "RESERVATION_STANDARD" and 
    t2.Info.start_time < CURRENT_TIMESTAMP_MILLIS() and
    t2.Info.end_time > CURRENT_TIMESTAMP_MILLIS()
  group by NetworkId
) as t2
on t1.NetworkId = t2.NetworkId
where t2.standard_count > 0 and
  t1.Info.start_time < CURRENT_TIMESTAMP_MILLIS() and
  t1.Info.end_time > CURRENT_TIMESTAMP_MILLIS()
group by t1.NetworkId, t2.standard_count
order by line_item_count desc
limit 10;

283821 (Gorilla Nation Media - DFP) has 94117

** TODO Actually bring up an underdelivery cluster

** TODO Figure out how many divinations we can stuff into a single MDR for this network



** TODO Determine whether this number of divinations is affected by the number of MDR's the mixer is currently handling

** TODO Figure out how many underdelivering line items there are for all 1800 networks

* Small fixes

** TODO Specify deadline correctly for fio-shard

** TODO Correctly handle networks with no line items
